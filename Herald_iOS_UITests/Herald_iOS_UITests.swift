import XCTest

/// Содержит тесты, сгруппированные по какому-то признаку:
///   * Тесты на класс
///   * Тесты на какой-то экран приложения
class Herald_iOS_UITests: XCTestCase {

  /// Вызывается единственный раз перед запуском тестов в сценарии.
  /// Может использоваться, например, для начального состояния *всех* тестов
  override class func setUp() { }

  /// Вызывается единственный раз после выполнения последнего теста в сценарии.
  /// Может использоваться для подчистки того, что сделали тесты
  override class func tearDown() { }

  /// Вызывается перед запуском каждого теста. Используется для создания объектов,
  /// необходимых для тестирования или приведение приложения в нужное состояние
  override func setUpWithError() throws {

    /// Флаг, отвечающий за продолжение работы тестового сценария при возникновения ошибки.
    /// Обычно, ставится в `false`.
    continueAfterFailure = false
  }

  /// Вызывается сразу после завершения каждого теста. Как и class-вариант, используется для
  /// подчистки за тестом (удаление файлов, отписывание от уведомлений и т.п.)
  override func tearDownWithError() throws {

  }

  /// Тестом считается метод экземпляра класса, начинающийся с `test`. В нём и происходит
  /// тестирование субъекта.
  func testExample() throws {
    /// UI-тесты должны запускать приложение перед тем, как начать работу.
    /// `XCTUIApplication` — это корневой элемент дерева элементов интерфейса, с которым
    /// происходит взаимодействие в тесте (как <html> у веб-страницы). Вообще, весь интерфейс
    /// приложения описывается деревом `XCUIElement`-ов, с которыми можно
    /// взаимодействовать:
    ///   * нажимать
    ///   * ожидать появления
    ///   * свайпать
    ///   * проверять существование
    ///   * вводить текст
    ///   * обращаться к детям
    ///   * выполнять поиск других элементов внутри иерархии
    let app = XCUIApplication()
    app.launch()

    /// Если не знаете с чего начать — используйте запись теста, запустив существующее
    /// приложение. Затем отладчиком можно посмотреть структуру дерева и использовать
    /// эту информацию для написания `XCTAssert`-ов
  }
}
